#!/bin/bash -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

CONSOLE=0
ANALYZE=1
ARCH=x86_64
while getopts "hca:A" OPT
do
        case $OPT in
                c)
                        CONSOLE=1
                        ANALYZE=0
                        ;;
                A) ANALYZE=0 ;;
                a) ARCH=$OPTARG ;;
                h)
                        echo "$0 [OPTIONS] ASSEMBLY"
                        echo ""
                        echo "Options:"
                        echo "	-c		output assembly to console"
                        echo "	-A		skip the analysis"
                        echo "	-a ARCH		architecture (default: x86_64)"
                        echo "	-h		this help"
                        exit
                        ;;
                ?)
                        OPTIND=$(($OPTIND-1))
                        break
                        ;;
        esac
done
shift $((OPTIND-1))


if [ -f "$1" ]
then
	ASM="$1"
else
	[ -n "$TMPDIR" ] || TMPDIR=$(mktemp -d)/
	chmod 755 $TMPDIR
	ASM=${TMPDIR}shellcode.s

	echo ".globl _start" >> $ASM
	echo "_start:" >> $ASM
	[ "$ARCH" == "x86_64" -o "$ARCH" == "i686" ] && echo ".intel_syntax noprefix" >> $ASM
	echo "$1" >> $ASM
fi

ELF=${ASM%%.s}.elf
RAW=${ASM%%.s}.raw

$ARCH-linux-gnu-gcc -static -nostdlib -o $ELF $ASM
$ARCH-linux-gnu-objcopy --dump-section .text=$RAW $ELF

if [ "$CONSOLE" -eq 0 ]
then
	echo "[+] ASM file: $ASM"
	echo "[+] ELF file: $ELF"
	echo "[+] RAW file: $RAW"

	[ "$ANALYZE" -eq 0 ] || $SCRIPT_DIR/analyze -a $ARCH $ELF $RAW
else
	cat $RAW
fi
